@page "/House/{RoomID}"
@inject HttpClient Http
@inject GameState GameState
@implements IDisposable

@if (room != null)
{
    @room.Name
    @foreach (Furniture furniture in room.Furniture)
    {
        @LoadFurniture(furniture);
    }

}


@functions{

    [Parameter]
    public string roomID { get; set; }
    private Room room;

    private RenderFragment LoadFurniture(Furniture furniture)
    {
        return builder =>
        {
            builder.OpenElement(0, "p");
            builder.OpenElement(1, "div");
            builder.AddContent(2, furniture.Name);
            builder.CloseElement();
            builder.CloseElement();
        };
    }

    protected override void OnParametersSet()
    {
        SetRoom(roomID);
    }
    private void SetRoom(string id)
    {
        room = Program.roomManager.GetByID(int.Parse(id));
    }
    protected override void OnInitialized()
    {
        GameState.StateChanged += OnGameStateChanged;
        this.StateHasChanged();
    }
    void IDisposable.Dispose()
    {
        GameState.StateChanged -= OnGameStateChanged;
    }
    void OnGameStateChanged(object sender, EventArgs e) => StateHasChanged();
}